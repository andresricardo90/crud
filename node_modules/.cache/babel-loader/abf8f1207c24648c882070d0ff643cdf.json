{"ast":null,"code":"var _jsxFileName = \"/Users/andresricardo/Documents/Project/crud/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { constant, isEmpty, size } from 'lodash';\nimport shortid from 'shortid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [task, setTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [id, setId] = useState(\"\");\n\n  const addTask = e => {\n    e.preventDefault();\n\n    if (isEmpty(task)) {\n      console.log(\"Task empty\");\n      return;\n    }\n\n    const newTask = {\n      id: shortid.generate(),\n      name: task\n    };\n    setTasks([...tasks, newTask]);\n    setTask(\"\");\n  };\n\n  const saveTask = e => {\n    e.preventDefault();\n\n    if (isEmpty(task)) {\n      console.log(\"Task empty\");\n      return;\n    }\n\n    const editedTask = tasks.map(item => item.id === id ? {\n      id,\n      name: task\n    } : item);\n    setTasks(editedTask);\n    setEditMode(false);\n    setTask(\"\");\n    setId(\"\");\n  };\n\n  const deleteTask = id => {\n    const filterdTasks = tasks.filter(task => task.id !== id);\n    setTasks(filterdTasks);\n  };\n\n  const editTask = theTask => {\n    setTask(theTask.name);\n    setEditMode(true);\n    setId(theTask.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BANADUANA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center\",\n          children: \"Lista de tareas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), size(tasks) == 0 ? /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-center\",\n          children: \"Aun no hay tareas programadas.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"lead\",\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm float-right mx-2\",\n              onClick: () => deleteTask(task.id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning btn-sm float-right\",\n              onClick: () => editTask(task),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center\",\n          children: editMode ? \"Modificar tarea\" : \"Agregar Tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: editMode ? saveTask : addTask,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control mb-2\",\n            placeholder: \"Ingrese la tarea..\",\n            onChange: text => setTask(text.target.value),\n            value: task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: editMode ? \"btn btn-warning btn-block\" : \"btn btn-dark btn-block\",\n            type: \"submit\",\n            children: editMode ? \"Guardar\" : \"Agregar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3ZTODrvKEe2Fj2WS2v6kC0lMgAA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/andresricardo/Documents/Project/crud/src/App.js"],"names":["React","useState","constant","isEmpty","size","shortid","App","task","setTask","tasks","setTasks","editMode","setEditMode","id","setId","addTask","e","preventDefault","console","log","newTask","generate","name","saveTask","editedTask","map","item","deleteTask","filterdTasks","filter","editTask","theTask","text","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport { constant, isEmpty, size } from 'lodash'\nimport shortid from 'shortid'\n\nfunction App () {\n  const [task, setTask] = useState(\"\")\n  const [tasks, setTasks] = useState([])\n  const [editMode, setEditMode] = useState(false)\n  const [id, setId] = useState(\"\")\n\n  const addTask =(e) => {\n    e.preventDefault()\n    if (isEmpty(task)){\n      console.log(\"Task empty\")\n      return\n    }\n\n   const newTask = {\n     id: shortid.generate(),\n     name: task\n   }\n\n   setTasks([...tasks, newTask])\n\n    setTask(\"\")\n\n  }\n\n  const saveTask =(e) => {\n    e.preventDefault()\n    if (isEmpty(task)){\n      console.log(\"Task empty\")\n      return\n    }\n\n\n    const editedTask = tasks.map(item => item.id === id ? {id, name: task} : item)\n    setTasks(editedTask)\n    setEditMode(false)\n    setTask(\"\")\n    setId(\"\")\n\n  }\n\n  const deleteTask =(id) => {\n    const filterdTasks = tasks.filter(task => task.id !== id)\n    setTasks(filterdTasks)\n  }\n\n  const editTask =(theTask) => {\n    setTask(theTask.name)\n    setEditMode(true)\n    setId(theTask.id)\n  }\n  \n  return (\n    <div className=\"container mt-5\">\n      <h1>BANADUANA</h1>\n      <hr/>\n      <div className=\"row\">\n\n        <div className=\"col-8\">\n          <h4 className=\"text-center\">Lista de tareas</h4>\n          \n          {\n            size(tasks) == 0 ? (\n              <h5 className=\"text-center\">Aun no hay tareas programadas.</h5>\n            ) : (\n\n              <ul className=\"list-group\">\n\n              {\n                tasks.map((task) => (\n  \n                  <li className=\"list-group-item\" key={task.id}>\n                  <span className=\"lead\">{task.name}</span>\n  \n                  <button \n                    className=\"btn btn-danger btn-sm float-right mx-2\"\n                    onClick={() => deleteTask(task.id)}\n                  >\n                    Eliminar\n                  </button>\n  \n                  <button \n                    className=\"btn btn-warning btn-sm float-right\"\n                    onClick={() => editTask(task)}\n                    >\n                    Editar\n                  </button>\n  \n                </li>\n  \n                ))\n               \n              }\n  \n              </ul>\n            )\n           \n          }\n\n        </div>\n        <div className=\"col-4\">\n        <h4 className=\"text-center\">\n          { editMode ? \"Modificar tarea\" : \"Agregar Tarea\"} \n          </h4>\n        <form onSubmit={ editMode ? saveTask : addTask}>\n          <input \n            type=\"text\"\n            className=\"form-control mb-2\"\n            placeholder=\"Ingrese la tarea..\"\n            onChange={(text) => setTask(text.target.value)}\n            value={task}\n          />\n            <button \n              className={ editMode ? \"btn btn-warning btn-block\" : \"btn btn-dark btn-block\"}\n              type=\"submit\"\n              >\n                { editMode ? \"Guardar\" : \"Agregar\" }\n            </button>\n\n       \n        </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}